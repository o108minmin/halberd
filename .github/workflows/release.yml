name: release
on:
  push:
    tags:
    - "v*"

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.release_id }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  build:
    name: Build and Upload Release Asset
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: halberdcli
            asset_name: halberd-x86_64-unknown-linux-gnu
            quick_start: quick_halberd.sh
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            artifact_name: halberdcli.exe
            asset_name: halberd-x86_64-pc-windows-gnu
            quick_start: quick_halberd.bat
    runs-on: ${{ matrix.os }}
    needs: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: install dependencies (ubuntu only)
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      - name: Cross build with all features Build project
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }} --all-features --workspace --exclude halberd_gui
      - name: Copy binary
        run: |
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} ./
      - name: Copy quick start scripts
        run: |
          cp scripts/${{ matrix.quick_start }} ./
      - name: Create zip
        run: |
          zip ${{ matrix.asset_name }}.zip ${{ matrix.artifact_name }} README.md ${{ matrix.quick_start }}
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./${{ matrix.asset_name }}.zip
          asset_name: ${{ matrix.asset_name }}.zip
          asset_content_type: application/zip
  build-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    needs: release
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: setup node
      uses: actions/setup-node@v1
      with:
        node-version: 16
    - name: install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: install dependencies (ubuntu only)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
    - name: install app dependencies and build it
      run: cd halberd_gui && yarn && yarn build
    - name: view needs.release.outputs.release_id
      run: echo ${{ needs.release.outputs.release_id }}
    - uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        releaseId: ${{ needs.release.outputs.release_id }}
        projectPath: ./halberd_gui
